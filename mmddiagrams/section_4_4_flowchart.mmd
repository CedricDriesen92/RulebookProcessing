graph TD
    A[Start] --> B{Check <font color='pink'>Building</font>}
    B --> C{Check <font color='blue'>Amount of storeys</font>}
    C --> |Amount of storeys > 0| D{Check <font color='pink'>Storey</font> for each storey}
    C --> |Amount of storeys <= 0| E[Fail: Building must have at least one storey]
    D --> F{Check <font color='blue'>Number of exits</font>}
    F --> |Number of exits >= 2| G[Pass: Storey has sufficient exits]
    F --> |Number of exits < 2| H[Fail: Storey must have at least 2 exits]
    G --> I{Check <font color='blue'>Has active fire protection?</font>}
    I --> |Yes| J[Pass: Storey has active fire protection]
    I --> |No| K[Fail: Storey must have active fire protection]
    J --> L{Check <font color='pink'>Compartment</font> for each compartment in storey}
    L --> M{Check <font color='blue'>Area</font>}
    M --> |Area <= 2000| N[Pass: Compartment area within limit]
    M --> |Area > 2000| O[Fail: Compartment area exceeds 2000 m2]
    N --> P{Check <font color='blue'>Occupancy</font>}
    P --> |Occupancy <= 500| Q[Pass: Compartment occupancy within limit]
    P --> |Occupancy > 500| R[Fail: Compartment occupancy exceeds 500]
    Q --> S{Check <font color='blue'>Number of exits</font>}
    S --> |Number of exits >= 2| T[Pass: Compartment has sufficient exits]
    S --> |Number of exits < 2| U[Fail: Compartment must have at least 2 exits]
    T --> V{Check <font color='blue'>Has nighttime occupancy?</font>}
    V --> |Yes| W{Check <font color='blue'>Has active fire protection?</font>}
    V --> |No| X[Pass: No nighttime occupancy]
    W --> |Yes| Y[Pass: Compartment has active fire protection]
    W --> |No| Z[Fail: Compartment with nighttime occupancy must have active fire protection]
    Y --> AA{Check <font color='blue'>Is Classroom?</font>}
    AA --> |Yes| AB{Check classroom-specific rules}
    AA --> |No| AC{Check <font color='blue'>Is Parking?</font>}
    AC --> |Yes| AD{Check parking-specific rules}
    AC --> |No| AE[Pass: Not a special use compartment]
    AB --> AF{Check <font color='pink'>Door</font> for each door in compartment}
    AF --> AG{Check <font color='blue'>Fire resistance</font>}
    AG --> |Fire resistance >= 30| AH[Pass: Door fire resistance sufficient]
    AG --> |Fire resistance < 30| AI[Fail: Door fire resistance insufficient]
    AH --> AJ{Check <font color='blue'>Self-closing</font>}
    AJ --> |Yes| AK[Pass: Door is self-closing]
    AJ --> |No| AL[Fail: Door must be self-closing]
    AK --> AM{Check <font color='blue'>Is Fire Exit?</font>}
    AM --> |Yes| AN{Check <font color='blue'>Useful Width</font>}
    AM --> |No| AO[Pass: Not a fire exit door]
    AN --> |Useful Width >= 0.9| AP[Pass: Fire exit door width sufficient]
    AN --> |Useful Width < 0.9| AQ[Fail: Fire exit door width insufficient]
    AP --> AR{Check <font color='pink'>Wall</font> for each wall in compartment}
    AR --> AS{Check <font color='blue'>Fire resistance</font>}
    AS --> |Fire resistance >= 60| AT[Pass: Wall fire resistance sufficient]
    AS --> |Fire resistance < 60| AU[Fail: Wall fire resistance insufficient]
    AT --> AV{Check <font color='blue'>Compartmentation</font>}
    AV --> |Yes| AW[Pass: Wall is part of compartmentation]
    AV --> |No| AX[Fail: Wall must be part of compartmentation]
    AW --> AY{Check <font color='blue'>Is External?</font>}
    AY --> |Yes| AZ{Check <font color='blue'>Fire resistance</font> >= 120}
    AY --> |No| BA[Pass: Not an external wall]
    AZ --> |Yes| BB[Pass: External wall fire resistance sufficient]
    AZ --> |No| BC[Fail: External wall fire resistance insufficient]
    BB --> BD{Check <font color='pink'>Stair</font> for each stair in compartment}
    BD --> BE{Check <font color='blue'>Fire resistance</font>}
    BE --> |Fire resistance >= 60| BF[Pass: Stair fire resistance sufficient]
    BE --> |Fire resistance < 60| BG[Fail: Stair fire resistance insufficient]
    BF --> BH{Check <font color='blue'>Useful Width</font>}
    BH --> |Useful Width >= 1.1| BI[Pass: Stair width sufficient]
    BH --> |Useful Width < 1.1| BJ[Fail: Stair width insufficient]
    BI --> BK{Check <font color='blue'>Tread length</font>}
    BK --> |Tread length >= 0.28| BL[Pass: Stair tread length sufficient]
    BK --> |Tread length < 0.28| BM[Fail: Stair tread length insufficient]
    BL --> BN{Check <font color='blue'>Riser height</font>}
    BN --> |Riser height <= 0.18| BO[Pass: Stair riser height sufficient]
    BN --> |Riser height > 0.18| BP[Fail: Stair riser height too high]
    BO --> BQ{Check <font color='blue'>Slope</font>}
    BQ --> |30 <= Slope <= 35| BR[Pass: Stair slope within acceptable range]
    BQ --> |Slope < 30 or Slope > 35| BS[Fail: Stair slope outside acceptable range]
    BR --> BT{Check <font color='blue'>Handrail</font>}
    BT --> |Handrail present| BU[Pass: Stair has handrail]
    BT --> |Handrail absent| BV[Fail: Stair must have handrail]
    BU --> BW{Check <font color='pink'>Evacuation Route</font> for each route}
    BW --> BX{Check <font color='blue'>Length</font>}
    BX --> |Length <= 30| BY[Pass: Evacuation route length within limit]
    BX --> |Length > 30| BZ[Fail: Evacuation route length exceeds 30m]
    BY --> CA{Check <font color='blue'>Useful Width</font>}
    CA --> |Useful Width >= 0.9| CB[Pass: Evacuation route width sufficient]
    CA --> |Useful Width < 0.9| CC[Fail: Evacuation route width insufficient]
    CB --> CD[End]