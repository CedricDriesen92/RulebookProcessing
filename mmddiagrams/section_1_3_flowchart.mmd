graph TD
    start([Start]) --> check_buildings{{"Check <font color='pink'>Buildings</font>"}}
    check_buildings --> |For each pair| compare_buildings{{"Compare <font color='pink'>Buildings</font>"}}
    compare_buildings --> check_facing{"Are facades<br>facing each other<br>or form inward<br>two-plane angle?"}
    check_facing -->|Yes| check_distance{"Calculate required<br>distance"}
    check_distance --> |If angle ≤ 90°| calc_distance_1["d = (h + 10 * cos(α)) / 2.5<br>where:<br>d = distance in m<br>h = <font color='blue'>Height of building</font> in m<br>α = enclosed angle"]
    check_distance --> |If 90° < angle ≤ 180°| calc_distance_2["d = 0"]
    calc_distance_1 & calc_distance_2 --> check_actual_distance{"Is actual distance ≥<br>calculated distance?"}
    check_actual_distance -->|Yes| pass_distance["Pass: Distance OK"]
    check_actual_distance -->|No| fail_distance["Fail: Insufficient distance"]
    check_facing -->|No| check_radiation{"Calculate radiation<br>between buildings"}
    check_radiation --> radiation_calc["Calculate radiation<br>in both directions"]
    radiation_calc --> check_radiation_limit{"Is radiation<br>≤ 15 kW/m² in<br>both directions?"}
    check_radiation_limit -->|Yes| pass_radiation["Pass: Radiation OK"]
    check_radiation_limit -->|No| fail_radiation["Fail: Excessive radiation"]
    pass_distance & fail_distance & pass_radiation & fail_radiation --> check_walls{"Check separating <font color='pink'>Walls</font>"}
    check_walls --> check_wall_rating{"Do separating walls<br>have <font color='blue'>Fire resistance</font><br>EI 60 or REI 60<br>if load-bearing?"}
    check_wall_rating -->|Yes| pass_wall["Pass: Wall rating OK"]
    check_wall_rating -->|No| fail_wall["Fail: Insufficient wall rating"]
    pass_wall & fail_wall --> check_doors{"Check connecting <font color='pink'>Doors</font>"}
    check_doors --> check_door_rating{"Do connecting doors<br>have <font color='blue'>Fire resistance</font><br>EI1 30?"}
    check_door_rating -->|Yes| check_door_closing{"Are doors <font color='blue'>Self-closing</font><br>or self-closing<br>in case of fire?"}
    check_door_closing -->|Yes| pass_door["Pass: Door OK"]
    check_door_closing -->|No| fail_door_closing["Fail: Door not self-closing"]
    check_door_rating -->|No| fail_door_rating["Fail: Insufficient door rating"]
    pass_door & fail_door_closing & fail_door_rating --> check_public_domain{"Are buildings separated<br>by existing streets, roads,<br>etc. belonging to<br>public domain?"}
    check_public_domain -->|Yes| exempt["Exempt from<br>distance requirement"]
    check_public_domain -->|No| not_exempt["Not exempt from<br>distance requirement"]
    exempt & not_exempt --> end([End])

    classDef pink fill:#FFC0CB,stroke:#333,stroke-width:2px;
    classDef blue fill:#ADD8E6,stroke:#333,stroke-width:2px;
    class Building,Buildings,Walls,Doors pink;
    class Height_of_building,Fire_resistance,Self-closing blue;