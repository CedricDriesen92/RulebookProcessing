@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix bot: <https://w3id.org/bot#> .
@prefix bpo: <https://w3id.org/bpo#> .
@prefix firebim: <http://example.org/firebim#> .
@prefix geo: <http://www.opengis.net/ont/geosparql#> .
@prefix opm: <https://w3id.org/opm#> .
@prefix ex: <http://example.org/> .
@prefix schema: <http://schema.org/> .

# Shape for validating Building
ex:BuildingShape a sh:NodeShape ;
    sh:targetClass bot:Building ;
    sh:property [
        sh:path rdfs:label ;
        sh:datatype xsd:string ;
        sh:minCount 1 ;
    ] .

# Shape for validating Storey
ex:StoreyShape a sh:NodeShape ;
    sh:targetClass bot:Storey ;
    sh:property [
        sh:path rdfs:label ;
        sh:datatype xsd:string ;
        sh:minCount 1 ;
    ] ;
    sh:property [
        sh:path bot:hasSpace ;
        sh:minCount 1 ;
        sh:class bot:Space ;
    ] .

# Shape for validating Space
ex:SpaceShape a sh:NodeShape ;
    sh:targetClass bot:Space ;
    sh:property [
        sh:path rdfs:label ;
        sh:datatype xsd:string ;
        sh:minCount 1 ;
    ] ;
    sh:property [
        sh:severity sh:Info ;
        sh:path geo:hasGeometry;
        sh:minCount 1 ;
    ] .

# Shape for validating Fire Door State
ex:FireDoorStateShape a sh:NodeShape ;
    sh:targetClass firebim:State ;
    sh:property [
        sh:path rdfs:label ;
        sh:datatype xsd:string ;
        sh:minCount 1 ;
    ] ;
    sh:property [
        sh:severity sh:Info ;
        sh:path firebim:currentState ;
        sh:datatype xsd:string ;
        sh:minCount 1 ;
    ] .

# Shape for validating Fire Door Attributes
ex:FireDoorAttributeShape a sh:NodeShape ;
    sh:targetClass bpo:Attribute ;
    sh:property [
        sh:path rdfs:label ;
        sh:datatype xsd:string ;
        sh:minCount 1 ;
    ] ;
    sh:property [
        sh:path schema:value ;
        sh:minCount 1 ;
    ] .

# Shape for calculating Compartment area
ex:CompartmentAreaCalculationShape a sh:NodeShape ;
    sh:targetClass firebim:Compartment ;
    rdfs:comment "Calculates the area of a compartment based on its contained spaces." ;
    sh:rule [
        a sh:SPARQLRule ;
        sh:prefixes (
            [ sh:prefix "firebim" ; sh:namespace "http://example.com/firebim#" ]
            [ sh:prefix "bot" ; sh:namespace "https://w3id.org/bot#" ]
            [ sh:prefix "rdfs" ; sh:namespace "http://www.w3.org/2000/01/rdf-schema#" ]
        ) ;
        sh:construct """
            CONSTRUCT {
                $this firebim:calculatedArea ?totalArea .
                $this firebim:debugAreaCalculation ?debug .
            }
            WHERE {
                {
                    SELECT $this (SUM(?area) AS ?totalArea) (GROUP_CONCAT(CONCAT(?zoneName, ': ', STR(?area)); SEPARATOR=', ') AS ?debug)
                    WHERE {
                        $this bot:containsZone ?zone .
                        ?zone firebim:area ?area .
                        ?zone rdfs:label ?zoneName .
                    }
                    GROUP BY $this
                }
            }
        """ ;
    ] .

# Validate compartment area
ex:CompartmentAreaShape a sh:NodeShape ;
    sh:targetClass firebim:Compartment ;
    rdfs:comment "Validates that compartment area is less than or equal to 2500 m², unless exceptions apply." ;
    sh:property [
        sh:severity sh:Warning ;
        sh:path firebim:calculatedArea ;
        sh:maxInclusive 2500 ;
        sh:message "Compartment area must be less than or equal to 2500 m², unless exceptions apply. Actual value: {$value}" ;
    ] ;
    ex:validatesMember "2.1.1.1" .

# Add inverse link
firebim:Member_2_1_1_1 firebim:hasRelatedShape ex:CompartmentAreaShape .

# Validate ground floor compartment area
ex:GroundFloorCompartmentAreaShape a sh:NodeShape ;
    sh:targetClass firebim:Compartment ;
    rdfs:comment "Validates that ground floor compartment area is less than or equal to 3500 m²." ;
    sh:and (
        [
            sh:property [
                sh:path firebim:isGroundFloor ;
                sh:hasValue true ;
            ]
        ]
        [
            sh:property [
                sh:path firebim:calculatedArea ;
                sh:datatype xsd:float ;
                sh:maxInclusive 3500 ;
                sh:message "Ground floor compartment area must be less than or equal to 3500 m². Actual value: {$value}" ;
            ]
        ]
    ) ;
    ex:validatesMember "2.1.1.2" .

# Add inverse link
firebim:Member_2_1_1_2 firebim:hasRelatedShape ex:GroundFloorCompartmentAreaShape .

# Validate compartment length
ex:CompartmentLengthShape a sh:NodeShape ;
    sh:targetClass firebim:Compartment ;
    rdfs:comment "Validates that compartment length does not exceed 90 m." ;
    sh:property [
        sh:path firebim:length ;
        sh:datatype xsd:float ;
        sh:maxInclusive 90 ;
        sh:message "Compartment length must not exceed 90 m. Actual value: {$value}" ;
    ] ;
    ex:validatesMember "2.1.1.3" .

# Add inverse link
firebim:Member_2_1_1_3 firebim:hasRelatedShape ex:CompartmentLengthShape .

# Validate large compartments
ex:LargeCompartmentShape a sh:NodeShape ;
    sh:targetClass firebim:Compartment ;
    rdfs:comment "Validates that large compartments have necessary fire safety systems." ;
    sh:and (
        [
            sh:or (
                [
                    sh:and (
                        [
                            sh:property [
                                sh:path firebim:calculatedArea ;
                                sh:minExclusive 2500 ;
                                sh:maxInclusive 3500 ;
                            ]
                        ]
                        [
                            sh:property [
                                sh:path firebim:isGroundFloor ;
                                sh:hasValue false ;
                            ]
                        ]
                    )
                ]
                [
                    sh:property [
                        sh:path firebim:calculatedArea ;
                        sh:minExclusive 3500 ;
                    ]
                ]
            )
        ]
        [
            sh:property [
                sh:path firebim:hasAutomaticFireExtinguishing ;
                sh:hasValue true ;
            ]
        ]
        [
            sh:property [
                sh:path firebim:hasSmokeAndHeatExtraction ;
                sh:hasValue true ;
            ]
        ]
    ) ;
    sh:message "Large compartments (>2500 m² for non-ground floor, or >3500 m²) must have automatic fire extinguishing and smoke/heat extraction systems. Calculated area: {$calculatedArea}" ;
    ex:validatesMember "2.1.1.4" .

# Add inverse link
firebim:Member_2_1_1_4 firebim:hasRelatedShape ex:LargeCompartmentShape .

# Additional debug information for area calculation
ex:AreaCalculationDebugShape a sh:NodeShape ;
    sh:targetClass firebim:Compartment ;
    rdfs:comment "Ensures that calculated area and debug information are present." ;
    sh:property [
        sh:path firebim:calculatedArea ;
        sh:minCount 1 ;
        sh:message "Calculated area is missing." ;
    ] ;
    sh:property [
        sh:path firebim:debugAreaCalculation ;
        sh:minCount 1 ;
        sh:message "Debug information for area calculation is missing." ;
    ] .