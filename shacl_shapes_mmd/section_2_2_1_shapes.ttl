@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix fbb: <http://example.com/firebimbuilding#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix firebim: <http://example.com/firebim#> .

fbb:CompartmentExitRequirementShape
    a sh:NodeShape ;
    sh:targetClass fbb:Compartment ;
    firebim:rulesource firebim:Section_2_2_1 ;
    sh:property [
        sh:path fbb:Occupancy ;
        sh:datatype xsd:integer ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
    ] ;
    sh:property [
        sh:path fbb:NumberOfExits ;
        sh:datatype xsd:integer ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
    ] ;
    sh:sparql [
        sh:message "Compartment does not have the required number of exits based on occupancy." ;
        sh:prefixes fbb: ;
        sh:select """
            SELECT $this ?actualExits ?requiredExits
            WHERE {
                $this fbb:Occupancy ?occupancy .
                $this fbb:NumberOfExits ?actualExits .
                BIND(
                    IF(?occupancy < 100, 1,
                        IF(?occupancy < 500, 2,
                            2 + CEIL((?occupancy - 500) / 1000)
                        )
                    ) AS ?requiredExits
                )
                FILTER(?actualExits < ?requiredExits)
            }
        """
    ] .

fbb:DoorFireExitShape
    a sh:NodeShape ;
    sh:targetClass fbb:Door ;
    firebim:rulesource firebim:Section_2_2_1 ;
    sh:property [
        sh:path fbb:IsFireExit ;
        sh:datatype xsd:boolean ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
    ] .

fbb:BuildingAssessmentShape
    a sh:NodeShape ;
    sh:targetClass fbb:Building ;
    firebim:rulesource firebim:Section_2_2_1 ;
    sh:sparql [
        sh:message "Building does not have the required number of fire exits." ;
        sh:prefixes fbb: ;
        sh:select """
            SELECT $this (COUNT(DISTINCT ?door) AS ?fireExits) (SUM(?requiredExits) AS ?totalRequired)
            WHERE {
                $this fbb:containsCompartment ?compartment .
                ?compartment fbb:Occupancy ?occupancy .
                BIND(
                    IF(?occupancy < 100, 1,
                        IF(?occupancy < 500, 2,
                            2 + CEIL((?occupancy - 500) / 1000)
                        )
                    ) AS ?requiredExits
                )
                OPTIONAL {
                    $this fbb:hasDoor ?door .
                    ?door fbb:IsFireExit true .
                }
            }
            GROUP BY $this
            HAVING (?fireExits < ?totalRequired)
        """
    ] .