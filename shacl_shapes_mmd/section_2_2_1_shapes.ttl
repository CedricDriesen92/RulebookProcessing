@prefix firebim: <http://example.com/firebim#> .

fbb:CompartmentExitRequirementShape
    a sh:NodeShape ;
    sh:targetClass fbb:Compartment ;
    fbb:flowchartNodeID "A" ;
    firebim:rulesource firebim:Section_2_2_1 ;
    sh:property [
        sh:path fbb:Occupancy ;
        sh:datatype xsd:integer ;
        sh:minCount 1 ;
        fbb:flowchartNodeID "B" ;
    ] ;
    sh:property [
        sh:path fbb:AdditionalExitsRequired ;
        sh:datatype xsd:integer ;
        sh:defaultValue 0 ;
    ] ;
    sh:property [
        sh:path fbb:NumberOfExits ;
        sh:datatype xsd:integer ;
        sh:minCount 1 ;
    ] ;
    sh:sparql [
        sh:message "Minimum number of exits calculation failed" ;
        sh:prefixes fbb: ;
        sh:select """
            SELECT $this ?violation
            WHERE {
                $this fbb:Occupancy ?occupancy .
                $this fbb:NumberOfExits ?actualExits .
                OPTIONAL { $this fbb:AdditionalExitsRequired ?additional } .
                BIND(COALESCE(?additional, 0) AS ?additionalRequired)
                
                BIND(
                    CASE 
                        WHEN ?occupancy < 100 THEN 1
                        WHEN ?occupancy >= 100 && ?occupancy < 500 THEN 2
                        ELSE (2 + CEIL((?occupancy - 500) / 1000))
                    END + ?additionalRequired AS ?requiredExits
                )
                
                BIND(?actualExits < ?requiredExits AS ?violation)
            }
            HAVING (?violation)
        """ ;
    ] .

fbb:FloorExitRequirementShape
    a sh:NodeShape ;
    sh:targetClass fbb:Floor ;
    fbb:flowchartNodeID "Q" ;
    firebim:rulesource firebim:Section_2_2_1 ;
    sh:property [
        sh:path fbb:Occupancy ;
        sh:datatype xsd:integer ;
        sh:minCount 1 ;
    ] ;
    sh:property [
        sh:path fbb:AdditionalExitsRequired ;
        sh:datatype xsd:integer ;
        sh:defaultValue 0 ;
    ] ;
    sh:property [
        sh:path fbb:NumberOfExits ;
        sh:datatype xsd:integer ;
        sh:minCount 1 ;
    ] ;
    sh:sparql [
        sh:message "Minimum number of exits calculation failed" ;
        sh:prefixes fbb: ;
        sh:select """
            SELECT $this ?violation
            WHERE {
                $this fbb:Occupancy ?occupancy .
                $this fbb:NumberOfExits ?actualExits .
                OPTIONAL { $this fbb:AdditionalExitsRequired ?additional } .
                BIND(COALESCE(?additional, 0) AS ?additionalRequired)
                
                BIND(
                    CASE 
                        WHEN ?occupancy < 100 THEN 1
                        WHEN ?occupancy >= 100 && ?occupancy < 500 THEN 2
                        ELSE (2 + CEIL((?occupancy - 500) / 1000))
                    END + ?additionalRequired AS ?requiredExits
                )
                
                BIND(?actualExits < ?requiredExits AS ?violation)
            }
            HAVING (?violation)
        """ ;
    ] .

fbb:RoomExitRequirementShape
    a sh:NodeShape ;
    sh:targetClass fbb:Room ;
    fbb:flowchartNodeID "V" ;
    firebim:rulesource firebim:Section_2_2_1 ;
    sh:property [
        sh:path fbb:Occupancy ;
        sh:datatype xsd:integer ;
        sh:minCount 1 ;
    ] ;
    sh:property [
        sh:path fbb:AdditionalExitsRequired ;
        sh:datatype xsd:integer ;
        sh:defaultValue 0 ;
    ] ;
    sh:property [
        sh:path fbb:NumberOfExits ;
        sh:datatype xsd:integer ;
        sh:minCount 1 ;
    ] ;
    sh:sparql [
        sh:message "Minimum number of exits calculation failed" ;
        sh:prefixes fbb: ;
        sh:select """
            SELECT $this ?violation
            WHERE {
                $this fbb:Occupancy ?occupancy .
                $this fbb:NumberOfExits ?actualExits .
                OPTIONAL { $this fbb:AdditionalExitsRequired ?additional } .
                BIND(COALESCE(?additional, 0) AS ?additionalRequired)
                
                BIND(
                    CASE 
                        WHEN ?occupancy < 100 THEN 1
                        WHEN ?occupancy >= 100 && ?occupancy < 500 THEN 2
                        ELSE (2 + CEIL((?occupancy - 500) / 1000))
                    END + ?additionalRequired AS ?requiredExits
                )
                
                BIND(?actualExits < ?requiredExits AS ?violation)
            }
            HAVING (?violation)
        """ ;
    ] .